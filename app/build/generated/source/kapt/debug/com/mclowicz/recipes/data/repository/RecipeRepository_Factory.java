// Generated by Dagger (https://dagger.dev).
package com.mclowicz.recipes.data.repository;

import com.mclowicz.recipes.data.network.RecipeApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RecipeRepository_Factory implements Factory<RecipeRepository> {
  private final Provider<RecipeApiService> recipeApiServiceProvider;

  public RecipeRepository_Factory(Provider<RecipeApiService> recipeApiServiceProvider) {
    this.recipeApiServiceProvider = recipeApiServiceProvider;
  }

  @Override
  public RecipeRepository get() {
    return newInstance(recipeApiServiceProvider.get());
  }

  public static RecipeRepository_Factory create(
      Provider<RecipeApiService> recipeApiServiceProvider) {
    return new RecipeRepository_Factory(recipeApiServiceProvider);
  }

  public static RecipeRepository newInstance(RecipeApiService recipeApiService) {
    return new RecipeRepository(recipeApiService);
  }
}
