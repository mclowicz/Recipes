// Generated by Dagger (https://dagger.dev).
package com.mclowicz.recipes.di;

import com.mclowicz.recipes.data.network.RecipeApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideRecipeApiFactory implements Factory<RecipeApi> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideRecipeApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public RecipeApi get() {
    return provideRecipeApi(retrofitProvider.get());
  }

  public static NetworkModule_ProvideRecipeApiFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideRecipeApiFactory(retrofitProvider);
  }

  public static RecipeApi provideRecipeApi(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideRecipeApi(retrofit));
  }
}
