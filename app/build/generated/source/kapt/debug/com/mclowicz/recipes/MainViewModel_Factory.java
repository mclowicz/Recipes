// Generated by Dagger (https://dagger.dev).
package com.mclowicz.recipes;

import com.mclowicz.recipes.data.repository.RecipeRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<RecipeRepository> recipeRepositoryProvider;

  public MainViewModel_Factory(Provider<RecipeRepository> recipeRepositoryProvider) {
    this.recipeRepositoryProvider = recipeRepositoryProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(recipeRepositoryProvider.get());
  }

  public static MainViewModel_Factory create(Provider<RecipeRepository> recipeRepositoryProvider) {
    return new MainViewModel_Factory(recipeRepositoryProvider);
  }

  public static MainViewModel newInstance(RecipeRepository recipeRepository) {
    return new MainViewModel(recipeRepository);
  }
}
